"""
Export CSV after query following Neo4j:

MATCH (u) 
WHERE u.enabled 
AND u.name CONTAINS "@" 
AND NOT toString(datetime({epochSeconds: ToInteger(coalesce(u.pwdlastset,0))})) CONTAINS "1970" 
RETURN u.name,toString(datetime({epochSeconds: ToInteger(coalesce(u.pwdlastset,0))}))

From:
SVC.SQL.0001@DOMAIN.LOCAL,2013-08-12T06:55:16Z

To:
SVC.SQL.0001@DOMAIN.LOCAL:Corp2013
SVC.SQL.0001@DOMAIN.LOCAL:Corp2013!
SVC.SQL.0001@DOMAIN.LOCAL:August2013
SVC.SQL.0001@DOMAIN.LOCAL:August2013!
"""


import sys
import csv
from datetime import datetime

def create_passwords(input_csv, corp_name=None):
    with open(input_csv, 'r', newline='') as infile:
        reader = csv.reader(infile)
        output_files = {
            'pwd-corp-exmark.txt': set(),
            'pwd-corp.txt': set(),
            'pwd-month-exmark.txt': set(),
            'pwd-month.txt': set()
        }

        for row in reader:
            username = row[0]
            date_str = row[1]

            try:
                date_obj = datetime.strptime(date_str, '%Y-%m-%dT%H:%M:%SZ')
                year = date_obj.strftime('%Y')
                month = date_obj.strftime('%B')  
            except ValueError:
                continue

            if corp_name:
                output_files['pwd-corp-exmark.txt'].add(f"{username}:{corp_name}{year}!")
                output_files['pwd-corp.txt'].add(f"{username}:{corp_name}{year}")
            output_files['pwd-month-exmark.txt'].add(f"{username}:{month}{year}!")
            output_files['pwd-month.txt'].add(f"{username}:{month}{year}")

        for filename, lines in output_files.items():
            with open(filename, 'w', newline='') as outfile:
                for line in sorted(lines):
                    outfile.write(line + '\n')

if len(sys.argv) > 1:
    input_csv = sys.argv[1]
    corp_name = sys.argv[2] if len(sys.argv) > 2 else None
    create_passwords(input_csv, corp_name)
else:
    print("Usage: python3 pwdchange2combolist.py <input_csv_file> [corp_name]")


NOTES: Check duplicates. Must be either two or four canditates and one per file.
cat pwd-* | cut -d ":" -f1 | sort | uniq -c | sort -nr | egrep -v '( 4 | 2 )'   #Should return nothing
for F in $(ls pwd-*) ; do cat $F | cut -d ":" -f1 | sort | uniq -c | sort -nr | grep -Ev '( 1 )' ; done   #Should return nothing
